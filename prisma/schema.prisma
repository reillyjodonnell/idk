// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String?
  username  String?    @unique
  email     String     @unique
  password  String
  avatar    String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     Post[]
  comments  Comment[]
  sessions  Session[]
  reactions Reaction[]
}

model Session {
  id        String   @id @default(uuid())
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  body       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  author     User      @relation(fields: [authorId], references: [id])
  authorId   String
  thumbsUp   Int       @default(0)
  thumbsDown Int       @default(0)
  fire       Int       @default(0)
  eyes       Int       @default(0)
  views      Int       @default(0)
  comments   Comment[]
  tags       Tag[]     @relation("PostToTag")
}

model Comment {
  id         Int        @id @default(autoincrement())
  body       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @default(now())
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String
  thumbsUp   Int        @default(0)
  thumbsDown Int        @default(0)
  fire       Int        @default(0)
  eyes       Int        @default(0)
  post       Post       @relation(fields: [postId], references: [id])
  postId     Int
  reactions  Reaction[]
}

model Reaction {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  emoji     String
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int

  @@unique([authorId, commentId])
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[] @relation("PostToTag")
}
